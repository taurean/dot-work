---
import Head from "../components/Head.astro";

// src/components/DefinitionsList.astro
import { Definitions } from "../data/definitions";

// ===== SERVER-SIDE PROCESSING =====
// All of this code runs on the server ONLY
// None of this JavaScript is sent to the client

// Function to shuffle array - executes on the server for each request
function shuffleArray(array) {
    const newArray = [...array];
    for (let i = newArray.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [newArray[i], newArray[j]] = [newArray[j], newArray[i]];
    }
    return newArray;
}

// Randomize definitions - different order for each page request
const randomizedDefinitions = shuffleArray(Definitions);

// Process footnotes after randomization
const allFootnotesMap = new Map();
const allFootnotesList = [];

// Build the footnote mapping and list from randomized definitions
randomizedDefinitions.forEach((def) => {
    def.footnotes.forEach((footnote) => {
        if (!allFootnotesMap.has(footnote.id)) {
            const footnoteWithIndex = {
                ...footnote,
                index: allFootnotesList.length + 1,
            };
            allFootnotesMap.set(footnote.id, footnoteWithIndex);
            allFootnotesList.push(footnoteWithIndex);
        }
    });
});

// Process content to replace footnote placeholders
function processContent(content) {
    return content.replace(
        /\[\[([^:]+?)(?::([^:]+?))?\]\]/g,
        (match, textOrId, possibleId) => {
            if (possibleId) {
                const footnoteInfo = allFootnotesMap.get(possibleId);
                if (footnoteInfo) {
                    return `${textOrId}<sup><a href="#${possibleId}">${footnoteInfo.index}</a></sup>`;
                }
                return textOrId;
            } else {
                const id = textOrId;
                const footnoteInfo = allFootnotesMap.get(id);
                if (footnoteInfo) {
                    return `${id}<sup><a href="#${id}">${footnoteInfo.index}</a></sup>`;
                }
                return id;
            }
        },
    );
}

// Pre-process all definition content on the server
const processedDefinitions = randomizedDefinitions.map((def) => ({
    ...def,
    processedContent: processContent(def.content),
}));
---

<html lang="en">
    <Head title="Taurean dot work" />
    <body>
        <header>
            <div>
                <h1>Taurean C. Bryant</h1>
                <span>noun</span>
                <button>Pronounce tor-ee-ehn</button>
            </div>
            <a href="/now">What's new</a>
        </header>

        <main>
            <h2>definition</h2>
            <ul>
                {
                    processedDefinitions.map((definition) => (
                        <li>
                            <p set:html={definition.processedContent} />
                        </li>
                    ))
                }
            </ul>
            <div>…some other content here…</div>
        </main>

        <footer>
            <ol>
                {
                    allFootnotesList.map((footnote) => (
                        <li id={footnote.id}>
                            <a
                                href={footnote.linkUrl || "#"}
                                target={
                                    footnote.openInNewTab ? "_blank" : "_self"
                                }
                                rel={
                                    footnote.openInNewTab
                                        ? "noopener noreferrer"
                                        : ""
                                }
                            >
                                <span class="footnoteCount">
                                    {footnote.index}
                                </span>{" "}
                                {footnote.linkTitle}
                            </a>
                            <p>{footnote.linkDescription}</p>
                        </li>
                    ))
                }
            </ol>
        </footer>

        <!-- <main>
            <h2>definition</h2>
            <ul>
                <li>
                    <p>
                        Nuyorican <sup><a href="#nuyorican">1</a></sup> design engineer
                        <sup><a href="#designengineer">2</a></sup> living in the
                        Bay Area of California
                        <sup><a href="#places">3</a></sup>
                    </p>
                </li>
                <li>
                    <p>
                        the designer and engineer behind Haiku<sup
                            ><a href="#haiku">4</a></sup
                        >
                    </p>
                </li>
            </ul>
            <div>…some other content here…</div>
        </main>
        <footer>
            <ol>
                <li id="nuyorican">
                    <a href="#" target="_blank">Nuyorican</a>
                    <p>
                        nuyorican a portmanteu of "New Yorker" and "Puerto
                        Rican"
                    </p>
                </li>
                <li id="designengineer">
                    <a href="#" target="_blank">LinkedIn</a>
                    <p>
                        I’d like to add you to my professional network on
                        LinkedIn
                    </p>
                </li>
                <li id="places">
                    <a href="#" target="_blank">My favorite places</a>
                    <p>some of my favorite places to go in the bay</p>
                </li>
                <li id="haiku">
                    <a href="#" target="_blank">Haiku Notes</a>
                    <p>a place to write and reflect</p>
                </li>
            </ol>
        </footer> -->
    </body>
</html>
